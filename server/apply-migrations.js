import { createClient } from '@supabase/supabase-js';
import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const supabaseUrl = 'https://buqjktrypviesnucczjr.supabase.co';
const supabaseKey = 'sb_secret_Ls98mNh34FpF-8ca8qg6yg_sikMhdkd';

const supabase = createClient(supabaseUrl, supabaseKey);

async function applyMigrations() {
  console.log('üöÄ –ü—Ä–∏–º–µ–Ω—è—é –º–∏–≥—Ä–∞—Ü–∏–∏...\n');

  const migrationPath = join(__dirname, 'supabase/migrations/20240101000000_initial_schema.sql');
  const sql = readFileSync(migrationPath, 'utf8');

  // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
  const commands = sql
    .split(';')
    .map(cmd => cmd.trim())
    .filter(cmd => cmd.length > 0 && !cmd.startsWith('--'));

  console.log(`–í—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥: ${commands.length}\n`);

  for (let i = 0; i < commands.length; i++) {
    const command = commands[i] + ';';
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    if (command.trim().startsWith('--')) continue;
    
    console.log(`[${i + 1}/${commands.length}] –í—ã–ø–æ–ª–Ω—è—é...`);
    
    try {
      const { data, error } = await supabase.rpc('exec_sql', { 
        sql_query: command 
      }).catch(async () => {
        // –ï—Å–ª–∏ rpc –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å
        const response = await fetch(`${supabaseUrl}/rest/v1/rpc/exec_sql`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'apikey': supabaseKey,
            'Authorization': `Bearer ${supabaseKey}`
          },
          body: JSON.stringify({ sql_query: command })
        });
        
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}: ${await response.text()}`);
        }
        
        return { data: await response.json(), error: null };
      });

      if (error) {
        console.log(`   ‚ö†Ô∏è ${error.message}`);
      } else {
        console.log(`   ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ`);
      }
    } catch (err) {
      console.log(`   ‚ö†Ô∏è ${err.message}`);
    }
  }

  console.log('\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã...\n');
  
  const { data: tables, error: tablesError } = await supabase
    .from('profiles')
    .select('count')
    .limit(0);
  
  if (tablesError) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü:', tablesError.message);
    console.log('\n‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é.');
    console.log('–û—Ç–∫—Ä–æ–π—Ç–µ: https://supabase.com/dashboard/project/buqjktrypviesnucczjr/sql/new');
    console.log('–ò –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∏–∑: server/supabase/migrations/20240101000000_initial_schema.sql');
  } else {
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  }
}

applyMigrations().catch(console.error);

