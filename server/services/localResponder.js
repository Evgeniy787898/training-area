const GREETING_REGEX = /\b(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|–¥–æ–±—Ä—ã–π|–¥–æ–±—Ä–æ–µ|—Ö–∞–π|hello|hi)\b/i;
const THANKS_REGEX = /\b(—Å–ø–∞—Å–∏–±–æ|–±–ª–∞–≥–æ–¥–∞—Ä—é|thx|thanks)\b/i;
const SUCCESS_REGEX = /(–≤—ã–ø–æ–ª–Ω–∏–ª|—Å–¥–µ–ª–∞–ª|–∑–∞–∫—Ä—ã–ª|—É—Å–ø–µ–ª|–≥–æ—Ç–æ–≤–æ|done|finish)/i;
const MISS_REGEX = /(–Ω–µ —Å–¥–µ–ª–∞–ª|–Ω–µ —É—Å–ø–µ–ª|–ø—Ä–æ–ø—É—Å—Ç–∏–ª|—Å–æ—Ä–≤–∞–ª|–ø—Ä–æ–≤–∞–ª|fail)/i;
const FATIGUE_REGEX = /(—É—Å—Ç–∞–ª|—Ä–∞–∑–±–∏—Ç|—Ç—è–∂–µ–ª|—Ç—è–∂—ë–ª|–Ω–µ –≤—ã–≤–µ–∑|–Ω–µ—Ç —Å–∏–ª|–ø–µ—Ä–µ–≥–æ—Ä–µ–ª)/i;
const ABILITY_REGEX = /(—á—Ç–æ|–∫–∞–∫–∏–µ)\s+(—Ç—ã\s+)?(—É–º–µ–µ—à—å|–º–æ–∂–µ—à—å|–¥–µ–ª–∞–µ—à—å|—Ñ—É–Ω–∫—Ü–∏–∏|–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏)/i;
const HELP_REGEX = /\b(–ø–æ–º–æ—â—å|help|–∫–æ–º–∞–Ω–¥|—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å|–∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è)\b/i;
const CALISTHENICS_REGEX = /–∫–∞–ª–∏—Å—Ç–µ–Ω–∏–∫/i;
const FUNCTIONAL_REGEX = /(—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω(—ã–π|–∞—è)?\s+—Ç—Ä–µ–Ω–∏–Ω–≥|functional training)/i;
const RPE_REGEX = /\bRPE\b/i;
const RECOVERY_REGEX = /(–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏|—Å–æ–Ω|–æ—Ç–¥—ã—Ö)/i;
const SCHEDULE_REGEX = /(—Ä–∞—Å–ø–∏—Å–∞–Ω|–∫–æ–≥–¥–∞|—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑|—á–∞—Å—Ç–æ—Ç–∞|schedule)/i;

const TOPIC_SNIPPETS = [
    {
        match: CALISTHENICS_REGEX,
        summary: '–ö–∞–ª–∏—Å—Ç–µ–Ω–∏–∫–∞ ‚Äî —Å–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –≤–µ—Å–æ–º, –≥–¥–µ –≥–ª–∞–≤–Ω—ã–º —Å–Ω–∞—Ä—è–¥–æ–º –æ—Å—Ç–∞—ë—Ç—Å—è —Ç–≤–æ–µ —Ç–µ–ª–æ.',
        bullets: [
            '–£–∫—Ä–µ–ø–ª—è–µ—Ç —Å–≤—è–∑–∫–∏, —Å—É—Å—Ç–∞–≤—ã –∏ –º—ã—à—Ü—ã –±–µ–∑ —Ç—è–∂—ë–ª—ã—Ö –æ—Ç—è–≥–æ—â–µ–Ω–∏–π, —Ä–∞–∑–≤–∏–≤–∞—è –±–∞–ª–∞–Ω—Å –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å.',
            '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç—Å—è —á–µ—Ä–µ–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏: –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Å–ª–æ–∂–Ω—è–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è—è –∞–º–ø–ª–∏—Ç—É–¥—É, —Ä—ã—á–∞–≥ –∏–ª–∏ –≤—Ä–µ–º—è –ø–æ–¥ –Ω–∞–≥—Ä—É–∑–∫–æ–π.',
            '–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–æ–º–∞—à–Ω–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç—É—Ä–Ω–∏–∫–∞, –±—Ä—É—Å—å–µ–≤ –∏–ª–∏ —Ä–µ–∑–∏–Ω–æ–∫, –∞ —Ç–µ—Ö–Ω–∏–∫–∞ –æ—Å—Ç–∞—ë—Ç—Å—è –≤ —Ñ–æ–∫—É—Å–µ.',
        ],
        tip: '–î–ª—è —É—Å—Ç–æ–π—á–∏–≤–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —á–µ—Ä–µ–¥—É–π —Å–∏–ª–æ–≤—ã–µ –¥–Ω–∏ —Å –º–æ–±–∏–ª–∏–∑–∞—Ü–∏–µ–π –∏ —Å–ª–µ–¥–∏ –∑–∞ RPE ‚Äî –¥–µ—Ä–∂–∏ –µ–≥–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 7‚Äì8.',
    },
    {
        match: FUNCTIONAL_REGEX,
        summary: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥ –≥–æ—Ç–æ–≤–∏—Ç —Ç–µ–ª–æ –∫ —Ä–µ–∞–ª—å–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏—è–º: –ø–µ—Ä–µ–Ω–æ—Å–∏–º, —Ç—è–Ω–µ–º, —Ç–æ–ª–∫–∞–µ–º, —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä—É–µ–º.',
        bullets: [
            '–ö–æ–º–±–∏–Ω–∏—Ä—É–µ—Ç –º–Ω–æ–≥–æ—Å—É—Å—Ç–∞–≤–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, —Ä–∞–±–æ—Ç—É –∫–æ—Ä–ø—É—Å–∞ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–≤–∏–∂–µ–Ω–∏–π.',
            '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–∞–∑–Ω—ã–µ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ ‚Äî —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω—É—é, —Å–∞–≥–∏—Ç—Ç–∞–ª—å–Ω—É—é, –ø–æ–ø–µ—Ä–µ—á–Ω—É—é ‚Äî —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–µ—Ä–µ–∫–æ—Å–æ–≤.',
            '–ß–∞—Å—Ç–æ —Å—Ç—Ä–æ–∏—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –±–ª–æ–∫–æ–≤: –∞–∫—Ç–∏–≤–∞—Ü–∏—è ‚Üí –æ—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å ‚Üí —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–µ —Ñ–∏–Ω–∞–ª—ã –∏–ª–∏ –º–µ—Ç–∫–æ–Ω.',
        ],
        tip: '–í—ã–±–∏—Ä–∞—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, —Å–º–æ—Ç—Ä–∏, —á—Ç–æ–±—ã –≤ –Ω–µ–¥–µ–ª–µ –±—ã–ª–∏ —Ç—è–≥–∞, –∂–∏–º, –ø—Ä–∏—Å–µ–¥, –∫–æ—Ä –∏ —ç–ª–µ–º–µ–Ω—Ç –±–∞–ª–∞–Ω—Å–∞ ‚Äî —ç—Ç–æ –±–∞–∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.',
    },
    {
        match: RPE_REGEX,
        summary: 'RPE (Rate of Perceived Exertion) ‚Äî —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–∞—è —à–∫–∞–ª–∞ –Ω–∞–≥—Ä—É–∑–∫–∏ –æ—Ç 1 –¥–æ 10.',
        bullets: [
            '6‚Äì7: –º–æ–∂–Ω–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å, –æ—Å—Ç–∞—ë—Ç—Å—è 2‚Äì3 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è ¬´–≤ –∑–∞–ø–∞—Å–µ¬ª ‚Äî –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è —Ä–∞–±–æ—á–∞—è –∑–æ–Ω–∞.',
            '8: —Ç—è–∂–µ–ª–æ, –Ω–æ —Ç–µ—Ö–Ω–∏–∫–∞ –≤ –ø–æ—Ä—è–¥–∫–µ, –∑–∞–ø–∞—Å 1 –ø–æ–≤—Ç–æ—Ä ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º, –∫–æ–≥–¥–∞ —Ö–æ—Ç–∏–º —Å—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å.',
            '9‚Äì10: –ø—Ä–µ–¥–µ–ª, —Ç–µ—Ö–Ω–∏–∫–∞ —Ä–∞—Å–ø–∞–¥–∞–µ—Ç—Å—è ‚Äî —Å—é–¥–∞ –∑–∞—Ö–æ–¥–∏–º —Ä–µ–¥–∫–æ, –∫–æ–≥–¥–∞ —Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –º–∞–∫—Å–∏–º—É–º.',
        ],
        tip: '–ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ RPE —É—Å–∫–∞–∫–∞–ª –≤—ã—à–µ 8 –ø–æ–¥—Ä—è–¥ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, —Å–º–µ—Å—Ç–∏ –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Å–æ–Ω.',
    },
    {
        match: RECOVERY_REGEX,
        summary: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ ‚Äî –ø–æ–ª–æ–≤–∏–Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: –º—ã—à—Ü—ã —Ä–∞—Å—Ç—É—Ç –Ω–µ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ, –∞ –º–µ–∂–¥—É –Ω–∏–º–∏.',
        bullets: [
            '–°–æ–Ω 7‚Äì9 —á–∞—Å–æ–≤ ‚Äî –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä. –†–∞–∑–¥–µ–ª–∏ —Å–≤–µ—Ç –∏ —Ç—å–º—É: –ø—Ä–∏–≥–ª—É—à–∏ —ç–∫—Ä–∞–Ω—ã –∑–∞ —á–∞—Å –¥–æ —Å–Ω–∞, –¥–µ—Ä–∂–∏ –∫–æ–º–Ω–∞—Ç—É –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ–π.',
            '–ü–∏—Ç–∞–π—Å—è —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –±–µ–ª–æ–∫ –∏ –º–∏–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç—ã. 1.6‚Äì2 –≥ –±–µ–ª–∫–∞ –Ω–∞ –∫–≥ –º–∞—Å—Å—ã –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –ø–ª–æ—Ç–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö.',
            '–í–∫–ª—é—á–∞–π –∞–∫—Ç–∏–≤–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: 10‚Äì15 –º–∏–Ω—É—Ç –ª—ë–≥–∫–æ–π –º–æ–±–∏–ª–∏–∑–∞—Ü–∏–∏, –ø—Ä–æ–≥—É–ª–∫—É, –¥—ã—Ö–∞–Ω–∏–µ 4-6-4, —á—Ç–æ–±—ã —Å–Ω–∏–º–∞—Ç—å —Å—Ç—Ä–µ—Å—Å.',
        ],
        tip: '–ï—Å–ª–∏ HRV –ø–∞–¥–∞–µ—Ç –∏–ª–∏ –ø—É–ª—å—Å –≤ –ø–æ–∫–æ–µ —Ä–∞—Å—Ç—ë—Ç, –¥–µ–ª–∞–π —Ä–∞–∑–≥—Ä—É–∑–æ—á–Ω—ã–π –±–ª–æ–∫ ‚Äî —ç—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç —Ç–µ–º–ø –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏.',
    },
];

export function buildLocalReply({ message, profile, history = [] } = {}) {
    const normalized = (message || '').trim();
    const tone = determineGreetingTone({ message: normalized, profile, history });
    if (!normalized) {
        return genericReply({ profile, message: normalized });
    }

    if (GREETING_REGEX.test(normalized)) {
        return greetingReply({ profile, history, tone });
    }

    if (THANKS_REGEX.test(normalized)) {
        return thanksReply({ profile });
    }

    if (ABILITY_REGEX.test(normalized) || HELP_REGEX.test(normalized)) {
        return capabilityReply({ profile });
    }

    const topicSnippet = TOPIC_SNIPPETS.find(item => item.match.test(normalized));
    if (topicSnippet) {
        return topicReply(topicSnippet, profile);
    }

    if (SCHEDULE_REGEX.test(normalized)) {
        return scheduleReply(profile);
    }

    return genericReply({ profile, message: normalized });
}

function greetingReply({ profile, history, tone }) {
    const lastAssistant = [...history].reverse().find(item => item.role === 'assistant');
    const todaysFocus = extractLastPlanFocus(lastAssistant);
    const frequency = resolveFrequency(profile);

    const templates = {
        success: [
            '–ü—Ä–∏–≤–µ—Ç! –û—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏ ‚Äî –≤–∏–¥–Ω–æ –ø—Ä–æ–≥—Ä–µ—Å—Å.',
            frequency ? `–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–µ—Ä–∂–∞—Ç—å ${frequency}, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–∫—Ü–µ–Ω—Ç –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É.` : '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É—Å–∏–ª–∏—Ç—å –ø–ª–∞–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏.',
            todaysFocus ? `–°–µ–≥–æ–¥–Ω—è –ø–æ –ø–ª–∞–Ω—É ¬´${todaysFocus}¬ª. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å —Ç–æ–Ω–∫–æ—Å—Ç—è–º–∏.` : '–ì–æ—Ç–æ–≤ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∏–ª–∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—é.',
        ],
        slump: [
            '–ü—Ä–∏–≤–µ—Ç! –ë—ã–≤–∞–µ—Ç, —á—Ç–æ —Ä–∏—Ç–º —Å–±–∏–≤–∞–µ—Ç—Å—è ‚Äî –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ.',
            frequency ? `–í–µ—Ä–Ω—ë–º—Å—è –∫ ${frequency}, –Ω–æ –º—è–≥–∫–æ: –Ω–∞—á–Ω—ë–º —Å —Ä–∞–∑–º–∏–Ω–∫–∏ –∏ –ª—ë–≥–∫–æ–≥–æ –±–ª–æ–∫–∞.` : '–î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º —Å –∫–æ—Ä–æ—Ç–∫–æ–π —Å–µ—Å—Å–∏–∏, —á—Ç–æ–±—ã –ø–æ–π–º–∞—Ç—å —Ç–µ–º–ø.',
            '–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Å–ª–æ–∂–Ω–æ ‚Äî –ø–æ–¥–±–µ—Ä—ë–º –ø—Ä–æ—Å—Ç–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.',
        ],
        fatigue: [
            '–ü—Ä–∏–≤–µ—Ç! –ß—É–≤—Å—Ç–≤—É–µ—Ç—Å—è —É—Å—Ç–∞–ª–æ—Å—Ç—å ‚Äî —Å–¥–µ–ª–∞–µ–º –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ.',
            '–ü—Ä–µ–¥–ª–æ–∂—É –¥—ã—Ö–∞–Ω–∏–µ 4-6-4 –∏ –ª—ë–≥–∫—É—é –º–æ–±–∏–ª–∏–∑–∞—Ü–∏—é, —á—Ç–æ–±—ã —Å–Ω—è—Ç—å –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ.',
            '–ö–æ–≥–¥–∞ —Å–∏–ª—ã –≤–µ—Ä–Ω—É—Ç—Å—è, –Ω–∞–ø–∏—à–∏ ‚Äî –ø–æ–¥—Å—Ç—Ä–æ—é –ø–ª–∞–Ω –ø–æ–¥ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Ç–µ–º–ø.',
        ],
        neutral: [
            '–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ.',
            frequency ? `–î–µ—Ä–∂–∏–º ${frequency} ‚Äî —Ö–æ—Ä–æ—à–∏–π —Ä–∏—Ç–º.` : '–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤—ã–±—Ä–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É –∏ —Ü–µ–ª–∏.',
            todaysFocus ? `–°–µ–≥–æ–¥–Ω—è –≤ —Ñ–æ–∫—É—Å–µ ¬´${todaysFocus}¬ª.` : '–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –æ–±—Å—É–¥–∏—Ç—å ‚Äî —Ç–µ—Ö–Ω–∏–∫–∞, –ø–ª–∞–Ω –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ.',
        ],
    };

    const lines = templates[tone] || templates.neutral;
    return lines.join('\n');
}

function thanksReply({ profile }) {
    const frequency = resolveFrequency(profile);
    return [
        '–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! –°–ª–µ–¥–∏ –∑–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º –∏ –Ω–µ –∑–∞–±—ã–≤–∞–π –æ—Ç–º–µ—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ WebApp ‚Äî —Ç–∞–∫ —è –±—ã—Å—Ç—Ä–µ–µ –ø–æ–¥—Å—Ç—Ä–æ—é –ø–ª–∞–Ω.',
        frequency ? `–ù–∞–ø–æ–º–Ω—é: –º—ã –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ–º—Å—è –Ω–∞ ${frequency}.` : '–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É ‚Äî –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏.',
    ].join('\n');
}

function capabilityReply({ profile }) {
    const frequency = resolveFrequency(profile);
    const capabilities = [
        'üìÖ –°–æ—Å—Ç–∞–≤–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø–ª–∞–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é, —É—á–∏—Ç—ã–≤–∞—è —Ü–µ–ª–∏, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫—É.',
        'üìù –ü—Ä–∏–Ω—è—Ç—å –æ—Ç—á—ë—Ç –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ, —Ä–∞–∑–æ–±—Ä–∞—Ç—å RPE –∏ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—é.',
        'üìä –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π, –Ω–∞–ø–æ–º–Ω–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –º–æ–±–∏–ª–∏–∑–∞—Ü–∏—é.',
        'ü§ñ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Ç–µ—Ö–Ω–∏–∫–µ, –∫–∞–ª–∏—Å—Ç–µ–Ω–∏–∫–µ, –ø–∏—Ç–∞–Ω–∏–∏ –∏ –æ–±—â–µ–º —Ç—Ä–µ–Ω–∏–Ω–≥–µ, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π.',
        'üîó –û—Ç–∫—Ä—ã—Ç—å WebApp (`/webapp` –∏–ª–∏ ¬´–û—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ¬ª) –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫.',
    ];

    return [
        '–Ø ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç Tzona. –í–æ—Ç —á—Ç–æ –º–æ–≥—É –¥–µ–ª–∞—Ç—å –ø—Ä—è–º–æ –∑–¥–µ—Å—å –≤ —á–∞—Ç–µ:',
        '',
        ...capabilities,
        '',
        frequency ? `–°–µ–π—á–∞—Å –ø–ª–∞–Ω —Å—Ç—Ä–æ–∏—Ç—Å—è –ø–æ–¥ ${frequency}. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º ‚Äî —Å–∫–∞–∂–∏, –∏ –ø–µ—Ä–µ—Å–æ–±–µ—Ä—ë–º.` : '–ï—Å–ª–∏ –µ—â—ë –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ —á–∞—Å—Ç–æ—Ç—É –∏ —Ü–µ–ª–∏ ‚Äî –Ω–∞—á–Ω—ë–º —Å —ç—Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–ª–∞–Ω –±—ã–ª —Ç–æ—á–Ω—ã–º.',
    ].join('\n');
}

function topicReply(snippet, profile) {
    const frequency = resolveFrequency(profile);
    const header = snippet.summary;
    const bullets = snippet.bullets.map(line => `- ${line}`);
    const frequencyLine = frequency ? `–¢–≤–æ–π —Ç–µ–∫—É—â–∏–π —Ä–∏—Ç–º (${frequency}) –æ—Ç–ª–∏—á–Ω–æ –≤–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ —ç—Ç—É –∫–æ–Ω—Ü–µ–ø—Ü–∏—é ‚Äî –º–æ–∂–Ω–æ –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ RPE.` : null;

    return [
        header,
        '',
        ...bullets,
        '',
        snippet.tip ? `–°–æ–≤–µ—Ç —Ç—Ä–µ–Ω–µ—Ä–∞: ${snippet.tip}` : null,
        frequencyLine,
        '',
        '–ù—É–∂–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏–ª–∏ —Ç–µ—Ö–Ω–∏–∫–∞ ‚Äî —É—Ç–æ—á–Ω–∏, –∏ —Å–æ–±–µ—Ä—ë–º –µ—ë –ø–æ–¥ —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å.',
    ]
        .filter(Boolean)
        .join('\n');
}

function scheduleReply(profile) {
    const frequency = resolveFrequency(profile);
    const base = frequency
        ? `–°–µ–π—á–∞—Å –ø–ª–∞–Ω –Ω–∞ ${frequency}: —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–≥—Ä—É–∑–∫—É —Ç–∞–∫, —á—Ç–æ–±—ã —á–µ—Ä–µ–¥–æ–≤–∞–ª–∏—Å—å —Å–∏–ª–æ–≤—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ.`
        : '–ü–æ–∫–∞ —á–∞—Å—Ç–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ ‚Äî –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–µ—Ä–∂–∏–º 3 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é —Å —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ–º —Å–∏–ª–æ–≤–æ–π, —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –º–æ–±–∏–ª—å–Ω–æ—Å—Ç–∏.';

    return [
        base,
        '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, —Å–∫–∞–∂–∏: ¬´–°–æ–±–µ—Ä–∏ –Ω–æ–≤—ã–π –ø–ª–∞–Ω¬ª –∏–ª–∏ –Ω–∞–∑–æ–≤–∏ –∂–µ–ª–∞–µ–º–æ–µ —á–∏—Å–ª–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ.',
        '–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å WebApp –∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω—ã–µ –¥–Ω–∏ ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.',
    ].join('\n');
}

function genericReply({ profile, message }) {
    const frequency = resolveFrequency(profile);
    const intro = message
        ? `–Ø –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª –≤–æ–ø—Ä–æ—Å: ¬´${truncate(message, 200)}¬ª.`
        : '–ì–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—Å—É–∂–¥–µ–Ω–∏–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.';

    return [
        intro,
        '–°–µ–π—á–∞—Å —è –æ—Ç–≤–µ—á–∞—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫, –ø–æ—ç—Ç–æ–º—É –º–æ–≥—É –æ–ø–µ—Ä–µ—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–µ—Ä—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è.',
        frequency ? `–ü–æ–º–Ω—é, —á—Ç–æ —Ü–µ–ª–∏–º—Å—è –≤ ${frequency}.` : null,
        '–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∑–∞–¥–∞—á—É —á—É—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ ‚Äî –∏ –ø—Ä–µ–¥–ª–æ–∂—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É, –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—é, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —Ä–∞–∑–ª–æ–∂—É —Ç–µ–º—É –ø–æ —à–∞–≥–∞–º.',
    ]
        .filter(Boolean)
        .join('\n');
}

function determineGreetingTone({ message, profile, history }) {
    if (!message) {
        return 'neutral';
    }
    if (FATIGUE_REGEX.test(message)) {
        return 'fatigue';
    }
    if (MISS_REGEX.test(message)) {
        return 'slump';
    }
    if (SUCCESS_REGEX.test(message)) {
        return 'success';
    }

    const adherence =
        profile?.adherence?.adherence_percent ??
        profile?.metrics?.adherence_percent ??
        null;

    if (adherence !== null) {
        const numeric = Number(adherence);
        if (Number.isFinite(numeric)) {
            if (numeric >= 75) {
                return 'success';
            }
            if (numeric <= 45) {
                return 'slump';
            }
        }
    }

    const lastAssistant = [...(history || [])].reverse().find(item => item.role === 'assistant');
    if (lastAssistant?.content?.includes('‚ö†Ô∏è')) {
        return 'slump';
    }

    return 'neutral';
}

function resolveFrequency(profile) {
    const value =
        profile?.preferences?.training_frequency ??
        profile?.training_frequency ??
        profile?.profile?.preferences?.training_frequency ??
        null;

    if (!value) {
        return null;
    }

    return `${value} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é`;
}

function extractLastPlanFocus(assistantMessage) {
    if (!assistantMessage?.content) {
        return null;
    }

    const match = assistantMessage.content.match(/–§–æ–∫—É—Å[:\s]+([^\n]+)/i);
    return match ? match[1].trim() : null;
}

function truncate(text, maxLength) {
    if (!text || text.length <= maxLength) {
        return text;
    }
    return `${text.slice(0, Math.max(0, maxLength - 1)).trim()}‚Ä¶`;
}

export default {
    buildLocalReply,
};
