import { Markup } from 'telegraf';
import config from '../../config/env.js';

const MAIN_MENU_BUTTON_ID = 'main_menu';

export function buildMainMenuKeyboard() {
    const rows = [];

    if (config.app.webAppUrl) {
        rows.push([
            Markup.button.webApp('üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å', config.app.webAppUrl),
        ]);
    }

    rows.push([
        Markup.button.text('üìÖ –ü–ª–∞–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è'),
        Markup.button.text('üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å'),
    ]);

    rows.push([
        Markup.button.text('üìù –û—Ç—á—ë—Ç –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ'),
        Markup.button.text('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'),
    ]);

    rows.push([
        Markup.button.text('‚ùì –ü–æ–º–æ—â—å'),
    ]);

    return Markup.keyboard(rows)
        .resize()
        .persistent()
        .placeholder('–û—Ç–∫—Ä–æ–π WebApp –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ');
}

export function withMainMenuButton(rows = []) {
    const keyboardRows = Array.isArray(rows)
        ? rows.map(row => [...row])
        : [];

    if (config.app.webAppUrl) {
        keyboardRows.unshift([
            Markup.button.webApp('üöÄ –û—Ç–∫—Ä—ã—Ç—å WebApp', config.app.webAppUrl),
        ]);
    }

    keyboardRows.push([
        Markup.button.callback('‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', MAIN_MENU_BUTTON_ID),
    ]);

    return Markup.inlineKeyboard(keyboardRows);
}

export function mainMenuCallbackId() {
    return MAIN_MENU_BUTTON_ID;
}

export default {
    buildMainMenuKeyboard,
    withMainMenuButton,
    mainMenuCallbackId,
};
